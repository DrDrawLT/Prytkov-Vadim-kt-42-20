// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prytkov_Vadim_kt_42_20_Lab_3.DB;

#nullable disable

namespace Prytkov_Vadim_kt_42_20_Lab_3.Migrations
{
    [DbContext(typeof(PrepodDBContext))]
    partial class PrepodDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Prytkov_Vadim_kt_42_20_Lab_3.Models.AcademicDegrees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ad_id")
                        .HasComment("Идентификатор должности");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_ad_name")
                        .HasComment("Имя");

                    b.HasKey("Id")
                        .HasName("pk_cd_academicDegrees_ad_id");

                    b.ToTable("AcademicDegrees");
                });

            modelBuilder.Entity("Prytkov_Vadim_kt_42_20_Lab_3.Models.Departments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("depart_id")
                        .HasComment("Идентификатор кафедры");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountTeach")
                        .HasColumnType("int")
                        .HasColumnName("c_depart_count")
                        .HasComment("Кол-во преподавателей");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("c_depart_date")
                        .HasComment("Дата создания кафедры");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_depart_name")
                        .HasComment("Имя");

                    b.Property<int>("TeachId")
                        .HasColumnType("int")
                        .HasColumnName("c_depart_teach")
                        .HasComment("Заместитель кафедры");

                    b.HasKey("Id")
                        .HasName("pk_cd_derts_depart_id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Prytkov_Vadim_kt_42_20_Lab_3.Models.Disciplines", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("discip_id")
                        .HasComment("Идентификатор дисциплины");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LoadId")
                        .HasColumnType("int")
                        .HasColumnName("c_discip_load")
                        .HasComment("Id нагрузки");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_discip_name")
                        .HasComment("Имя");

                    b.Property<int>("TeachId")
                        .HasColumnType("int")
                        .HasColumnName("c_discip_teach")
                        .HasComment("Id преподавателя");

                    b.HasKey("Id")
                        .HasName("pk_cd_disciplines_discip_id");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("Prytkov_Vadim_kt_42_20_Lab_3.Models.LoadPerHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("load_id")
                        .HasComment("Идентификатор нагрузки");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartId")
                        .HasColumnType("int")
                        .HasColumnName("c_load_depart_id")
                        .HasComment("Идентификатор кафедры");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("DiscipId")
                        .HasColumnType("int")
                        .HasColumnName("c_load_dis_id")
                        .HasComment("Идентификатор дисциплины");

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<int>("Hours")
                        .HasColumnType("int")
                        .HasColumnName("c_load_hours")
                        .HasComment("Время, ч.");

                    b.Property<int>("TeachId")
                        .HasColumnType("int")
                        .HasColumnName("c_load_teach_id")
                        .HasComment("Идентификатор преподавателя");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("pk_cd_load_load_id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("TeacherId");

                    b.ToTable("LoadPerHour");
                });

            modelBuilder.Entity("Prytkov_Vadim_kt_42_20_Lab_3.Models.Positions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("position_id")
                        .HasComment("Идентификатор должности");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_position_name")
                        .HasComment("Имя");

                    b.HasKey("Id")
                        .HasName("pk_cd_positions_position_id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Prytkov_Vadim_kt_42_20_Lab_3.Models.Teachers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("teach_id")
                        .HasComment("Идентификатор преподавателя");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AcDegId")
                        .HasColumnType("int")
                        .HasColumnName("c_teach_acdeg_id")
                        .HasComment("Идентификатор степени");

                    b.Property<int>("DepId")
                        .HasColumnType("int")
                        .HasColumnName("c_teach_dep_id")
                        .HasComment("Идентификатор кафедры");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_teach_name")
                        .HasComment("Имя");

                    b.Property<int>("PosId")
                        .HasColumnType("int")
                        .HasColumnName("c_teach_pos_id")
                        .HasComment("Идентификатор должности");

                    b.Property<string>("SecName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_teach_secname")
                        .HasComment("Фамилия");

                    b.Property<string>("ThirdName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_teach_thirdname")
                        .HasComment("Отчество");

                    b.HasKey("Id")
                        .HasName("pk_cd_teachers_teacher_id");

                    b.HasIndex(new[] { "AcDegId" }, "idx_cd_teachers_fk_f_acdeg_id");

                    b.HasIndex(new[] { "DepId" }, "idx_cd_teachers_fk_f_dep_id");

                    b.HasIndex(new[] { "PosId" }, "idx_cd_teachers_fk_f_posit_id");

                    b.ToTable("cd_teachers", (string)null);
                });

            modelBuilder.Entity("Prytkov_Vadim_kt_42_20_Lab_3.Models.LoadPerHour", b =>
                {
                    b.HasOne("Prytkov_Vadim_kt_42_20_Lab_3.Models.Departments", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prytkov_Vadim_kt_42_20_Lab_3.Models.Disciplines", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prytkov_Vadim_kt_42_20_Lab_3.Models.Teachers", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Discipline");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Prytkov_Vadim_kt_42_20_Lab_3.Models.Teachers", b =>
                {
                    b.HasOne("Prytkov_Vadim_kt_42_20_Lab_3.Models.AcademicDegrees", "AcademicDegree")
                        .WithMany()
                        .HasForeignKey("AcDegId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_acdeg_id");

                    b.HasOne("Prytkov_Vadim_kt_42_20_Lab_3.Models.Departments", "Depart")
                        .WithMany()
                        .HasForeignKey("DepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_dep_id");

                    b.HasOne("Prytkov_Vadim_kt_42_20_Lab_3.Models.Positions", "Position")
                        .WithMany()
                        .HasForeignKey("PosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_posit_id");

                    b.Navigation("AcademicDegree");

                    b.Navigation("Depart");

                    b.Navigation("Position");
                });
#pragma warning restore 612, 618
        }
    }
}
